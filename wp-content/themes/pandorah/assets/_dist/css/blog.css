/*
.sixteen-nine {
	@include aspect-ratio(16,9);
}*/
/* Media Queries Breakpoints */
/**
* *******************
*  Usage examples
* *******************
*
//
//  use <=
*   ALWAYS use <= ( '<' with '=' character) for all breakpoints
*   when setting max-width, ex: max-width: 767px,
*
*   so max-width: 1440px  == media('<=desktop-l')
*
* ***********************************************
*
//  use >
*   ALWAYS use only > as single character for all breakpoints
*   when setting min-width, ex: min-width: 768px,
*
*   so min-width: 1025px  == media('>desktop')
*
*************************************************
*
*## EXAMPLE:
*
*   (min-width: 768px) and (max-width: 1024px)
*   =
*   media ('>tablet'), ('<=desktop')
*
//

 */
/* project-custom > _custom__blog.scss */ /**
 ############################
 #   MODULE: BLOG NEWS GRID
 ############################
 */
.blog-grid {
  display: grid;
  grid-template: auto/repeat(var(--grid-item-col, 4), minmax(0, 1fr));
  gap: var(--grid-item-gap);
}
@media (max-width: 767px) {
  .blog-grid {
    --grid-item-col: 1;
    --grid-img-height: 150px;
  }
}
@media (min-width: 768px) {
  .blog-grid {
    margin-bottom: 10vmin;
    margin-top: 10px;
  }
}
.blog-grid .not-found {
  grid-column: span 3;
}
.blog-grid__item {
  margin-bottom: 0 !important;
}
@media (min-width: 1113px) {
  .listing-style-2 .blog-grid__item:first-child {
    grid-row: span 2;
    grid-column: span 2;
  }
  .listing-style-2 .blog-grid__item:first-child .c-block__media {
    height: calc(var(--grid-img-height) * 2);
  }
  .listing-style-2 .blog-grid__item:first-child .c-block__title {
    font-size: var(--h2-font-size);
  }
}
.blog-grid .c-block {
  --c-block-gap-vertical: 35px;
  --c-block-gap-horizontal: 35px;
  display: block;
  overflow: hidden;
  height: 100%;
  box-shadow: var(--grid-item-shadow);
  background-color: var(--grid-item-bg);
  position: relative;
  transition: opacity 0.3s;
}
@media (max-width: 767px) {
  .blog-grid .c-block {
    --c-block-gap-vertical: 15px;
    --c-block-gap-horizontal: 15px;
  }
}
.blog-grid .c-block__media {
  height: var(--grid-img-height);
  overflow: hidden;
}
.blog-grid .c-block__media-link {
  display: block;
  height: 100%;
}
.blog-grid .c-block__media img, .blog-grid .c-block__media picture {
  height: 100%;
  width: 100%;
  object-fit: cover;
  transition: transform 0.5s;
}
.blog-grid .c-block__body {
  padding: var(--grid-gap-vertical) var(--grid-gap-horizontal);
}
.blog-grid .c-block__title {
  font-weight: var(--grid-title-weight);
  color: var(--grid-title-color);
  font-size: var(--grid-title-size);
  transition: color 0.3s;
}
.blog-grid .c-block:hover .c-block__media img, .blog-grid .c-block:hover .c-block__media picture {
  transform: scale(1.05);
}
.blog-grid .c-block:hover .c-block__title {
  color: var(--primary-color2);
}

#ajax-posts {
  position: relative;
}

.c-loadmore {
  text-align: center;
  padding: 2em 0;
}

.single-post .site-content {
  padding-top: 30px;
}
@media (min-width: 1113px) {
  .single-post.fixed-header .site-content {
    padding-top: var(--navbar-height, 60px);
  }
}

.content-single__title {
  padding: 20px 0;
  width: 100%;
  background-color: #ccc;
  text-align: center;
}
.content-single__info {
  color: rgba(var(--primary-text-color), 0.8);
  text-align: left;
  padding: 20px 0;
}
@media (min-width: 1113px) {
  .content-single__info {
    display: flex;
    justify-content: space-between;
    font-size: 0.8em;
  }
}
.content-single__pagination {
  display: flex;
  justify-content: space-between;
  max-width: var(--blog-width, 650px);
  padding: 30px 0;
}

.single-post-style-2 {
  margin-bottom: 6vmin;
  max-width: none;
  position: relative;
  z-index: 20;
}
@media (min-width: 1113px) {
  .single-post-style-2 {
    align-items: center;
    display: flex;
    gap: 45px;
    left: 50%;
    margin-left: -50vw;
    margin-right: -50vw;
    right: 50%;
    width: calc(100vw - 8.1px);
  }
  .single-post-style-2 .single-post__col1,
  .single-post-style-2 .single-post__col2 {
    width: 50%;
  }
  .single-post-style-2 .single-post__col2 {
    padding: 0 5% 0 20px;
  }
  .single-post-style-2 .single-post__col2 .-h1 {
    font-size: var(--h1-font-size, 6rem);
    line-height: var(--h1-line-height, 1.3);
    font-weight: var(--h1-font-weight, 700);
  }
  .single-post-style-2 .single-post__col1 {
    height: 67vh;
    text-align: right;
  }
  .single-post-style-2 .single-post__col1 img, .single-post-style-2 .single-post__col1 picture {
    border: 1px solid transparent;
    border-radius: 0 var(--c-block-radius, 15px) var(--c-block-radius, 15px) 0;
    height: 100%;
    max-height: 100%;
    object-fit: cover;
    width: 100%;
  }
}

.blog-filter {
  background-color: var(--filter-bg);
}
.blog-filter__inner {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-top: var(--filter-vspace);
  padding-bottom: var(--filter-vspace);
}
.blog-filter__list {
  display: flex;
}
@media (max-width: 767px) {
  .blog-filter__list {
    flex-wrap: wrap;
    padding-right: 10px;
  }
}
.blog-filter__list > li {
  margin: 0 3em 0 0;
  white-space: nowrap;
}
@media (max-width: 767px) {
  .blog-filter__list > li {
    margin: 0 5px 10px;
  }
}
.blog-filter__list a {
  color: var(--filter-link-color);
  font-weight: var(--filter-link-weight);
  font-size: var(--filter-link-size);
}
.blog-filter__list a:hover, .blog-filter__list a.active_term {
  color: var(--filter-link-color-active);
}
.blog-filter__search .input {
  max-width: 200px;
  background-color: transparent;
}
.blog-filter__tag {
  padding-top: 30px;
  padding-bottom: 30px;
  display: flex;
  align-items: center;
  position: relative;
}
.blog-filter__tag label {
  font-weight: 700;
  text-transform: uppercase;
  margin-right: 1em;
}
.blog-filter__tag select {
  background: #fff;
  box-shadow: 0px 0px 25px #CDEAEC;
  border-radius: 8px;
  border: 1px solid #cdeaec;
  height: 54px;
  padding-left: 20px;
}
@media (max-width: 1112px) {
  .blog-filter .-desktop {
    display: none;
  }
}
@media (min-width: 1113px) {
  .blog-filter .-mobile {
    display: none;
  }
}

.blog-filter__search {
  position: absolute;
  height: 30px;
  top: 50%;
  margin-top: -15px;
  display: flex;
  right: 0;
}
@media (max-width: 1112px) {
  .blog-filter__search {
    display: none;
  }
}
.blog-filter__search-field {
  position: absolute;
  right: 40px;
  top: 50%;
  color: #222;
  transform: translateY(-50%);
  width: 300px;
  max-width: 0;
  opacity: 0;
  background: #fff;
  box-shadow: 0px 0px 4px #CDEAEC;
  border-radius: 8px;
  padding: 5px 10px;
  border: 1px solid #cdeaec;
  transition: all 0.3s !important;
}
.blog-filter__search-field:focus, .blog-filter__search-field:active {
  opacity: 1;
  width: 300px;
  max-width: 300px;
}
.blog-filter__search-btn {
  background: transparent;
  border: none;
}
.blog-filter__search-btn .icon {
  fill: #fff;
  height: 24px;
  width: 25px;
}
.blog-filter__search:hover .blog-filter__search-field {
  opacity: 1;
  width: 300px;
  max-width: 300px;
}

.blog-pagination {
  text-align: center;
  padding: 1em 0;
}
.blog-pagination ul {
  display: flex;
  justify-content: center;
  align-items: center;
}
.blog-pagination li {
  margin: 0 10px;
}
.blog-pagination a:hover {
  color: var(--primary-color2);
}
.blog-pagination .active a {
  color: var(--primary-color2);
  font-weight: 700;
}

.pagination-container {
  text-align: center;
  padding: 30px 0;
}

.blog-breadcrumb {
  font-size: var(--breadcrumb-size);
  padding-top: 1em;
  padding-bottom: 1em;
  color: var(--breadcrumb-color-current);
  background-color: var(--breadcrumb-bg);
}
.blog-breadcrumb > span {
  margin: 0 var(--breadcrumb-gap);
}
.blog-breadcrumb a {
  color: var(--breadcrumb-color);
}
.blog-breadcrumb a:hover {
  text-decoration: underline;
}
.blog-breadcrumb .current-item {
  color: var(--breadcrumb-color-current);
}

/* GALLERIES */
.gallery {
  display: flex;
  flex-wrap: wrap;
  margin: 3em 0 3em -0.8em;
  width: calc(100% + 1.6em);
}

.gallery-item {
  margin: 0.8em 0;
  padding: 0 0.8em;
  width: 100%;
}
.gallery-item img, .gallery-item picture {
  margin-bottom: 0;
}

.gallery-caption {
  display: block;
  margin-top: 0.8em;
}

@media (min-width: 768px) {
  .gallery-columns-2 .gallery-item {
    max-width: 50%;
  }
  .gallery-columns-3 .gallery-item {
    max-width: 33.33%;
  }
  .gallery-columns-4 .gallery-item {
    max-width: 25%;
  }
  .gallery-columns-5 .gallery-item {
    max-width: 20%;
  }
  .gallery-columns-6 .gallery-item {
    max-width: 16.66%;
  }
  .gallery-columns-7 .gallery-item {
    max-width: 14.28%;
  }
  .gallery-columns-8 .gallery-item {
    max-width: 12.5%;
  }
  .gallery-columns-9 .gallery-item {
    max-width: 11.11%;
  }
}
.post .aligncenter, .post .alignnone, .post iframe {
  margin-inline: auto;
}
.post .alignleft {
  float: left;
  margin-right: 20px;
}
.post .alignright {
  float: right;
  margin-left: 20px;
}
.post .wp-block-columns,
.post .alignfull {
  width: calc(100vw - 8.1px);
  max-width: none;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}
.post .wp-block-columns .wp-block-gallery,
.post .alignfull .wp-block-gallery {
  margin-bottom: 0;
}
.post .blocks-gallery-item img, .post .blocks-gallery-item picture {
  margin: 0;
}
.post .wp-block-image.alignfull img, .post .wp-block-image.alignwide img {
  margin-bottom: 0;
}

.filter-loader {
  height: 100%;
  width: 100%;
  display: flex;
  position: absolute;
  background: rgba(255, 255, 255, 0.5);
  z-index: 100;
  left: 0;
  top: 0;
}
.filter-loader .spinner {
  margin: auto;
}

.spinner {
  width: 40px;
  height: 40px;
  position: relative;
  margin: 100px auto;
}

.double-bounce1, .double-bounce2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: var(--primary-color2);
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-animation: sk-bounce 2s infinite ease-in-out;
  animation: sk-bounce 2s infinite ease-in-out;
}

.double-bounce2 {
  -webkit-animation-delay: -1s;
  animation-delay: -1s;
}

@-webkit-keyframes sk-bounce {
  0%, 100% {
    -webkit-transform: scale(0);
  }
  50% {
    -webkit-transform: scale(1);
  }
}
@keyframes sk-bounce {
  0%, 100% {
    transform: scale(0);
    -webkit-transform: scale(0);
  }
  50% {
    transform: scale(1);
    -webkit-transform: scale(1);
  }
}
.dark-mode {
  background-color: var(--dm-bg);
  padding: 0.8em 1em;
  display: flex;
  align-items: center;
  border-radius: var(--dm-radius);
  z-index: 10;
}
.dark-mode__wrap {
  position: relative;
}
@media (max-width: 1112px) {
  .dark-mode {
    max-width: 230px;
    margin: 0 auto 20px;
  }
}
@media (min-width: 1113px) {
  .dark-mode {
    position: absolute;
    transform: translateX(100%);
    top: 35px;
    right: 0;
  }
}
.dark-mode__label {
  margin-right: 15px;
  font-size: 16px;
  font-weight: 400;
  color: var(--dm-color);
  letter-spacing: 0.05em;
}
.dark-mode__toggler {
  width: var(--dm-width);
  height: var(--dm-height);
  padding: 1px;
  background-color: var(--dm-toggler-bg);
  border: solid 1px var(--dm-toggler-bg);
  transition: all 0.25s ease-in;
  border-radius: 16px;
  position: relative;
  overflow: hidden;
}
.dark-mode__toggler:focus {
  outline: none;
}
.dark-mode__handler {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  transition: background-color 0.25s cubic-bezier(0.41, 0.36, 0.82, 0.4);
}
.dark-mode__handler:before {
  content: "";
  position: absolute;
  transform: translate(0, -50%);
  top: 50%;
  left: 0;
  width: calc(var(--dm-height) - 4px);
  height: calc(var(--dm-height) - 4px);
  border-radius: 100%;
  background-color: var(--dm-dot);
  transition: all 0.25s cubic-bezier(0.41, 0.36, 0.82, 0.4);
}
[color-mode=dark] .dark-mode__handler:before {
  transform: translate(calc(-100% - 2px), -50%);
  left: 100%;
}

@media (min-width: 1113px) {
  .addtoany_share_save_container {
    margin: 0;
    position: sticky;
    top: 140px;
    height: 250px;
    float: left;
    z-index: 1;
  }
  .addtoany_share_save_container > div {
    position: absolute;
    top: 0;
    left: -160px;
  }
}
.addtoany_share_save_container .addtoany_list {
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media (max-width: 1112px) {
  .addtoany_share_save_container .addtoany_list {
    flex-direction: row;
    justify-content: center;
  }
}
.addtoany_share_save_container .addtoany_list a {
  margin-bottom: 10px;
}
.addtoany_share_save_container .addtoany_list a > span {
  border-radius: 40px;
  height: 50px;
  width: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.addtoany_share_save_container .addtoany_list a > span svg {
  width: 26px;
}

.separators-custom-box {
  display: flex;
  padding: 15px;
  justify-content: space-between;
  align-items: center;
  background-color: var(--primary-color1);
  border-radius: 10px;
  color: #fff;
  font-size: 2.2rem;
  margin: 1.5em 0;
}
@media (max-width: 767px) {
  .separators-custom-box {
    flex-direction: column;
    text-align: center;
  }
}
@media (min-width: 1113px) {
  .separators-custom-box {
    padding: 30px;
  }
}
.separators-custom-box > span, .separators-custom-box h4 {
  color: #fff !important;
  font-weight: bold;
  font-size: 2.4rem;
  margin: 0;
}
@media (max-width: 767px) {
  .separators-custom-box > span, .separators-custom-box h4 {
    margin-bottom: 20px;
    text-align: center !important;
  }
}
@media (min-width: 768px) {
  .separators-custom-box > span, .separators-custom-box h4 {
    padding-right: 20px;
  }
}
.separators-custom-box a {
  color: #fff;
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: 600;
  height: 50px;
  line-height: 50px;
  white-space: nowrap;
  background-color: var(--primary-color2);
  background-position: right 15px center;
  background-repeat: no-repeat;
  padding: 0 30px;
  border-radius: 30px;
  transition: all 0.3s;
}
.separators-custom-box a:hover {
  text-decoration: none !important;
  opacity: 0.9;
}

.content-single {
  position: relative;
}
.content-single #ez-toc-container {
  background-color: var(--toc-bg);
  padding: 0;
  margin-bottom: 3em;
  box-shadow: none;
  border: none !important;
  width: 100%;
  transition: all 0.3s;
  z-index: 10;
}
.content-single #ez-toc-container + *:first-of-type, .content-single #ez-toc-container + *:first-child {
  clear: both;
}
@media (min-width: 1281px) {
  .content-single #ez-toc-container.is-float {
    position: sticky;
    max-width: 300px;
    top: var(--navbar-height, 100px);
    right: 0;
    float: right;
    transform: translateX(110%);
  }
  .fixed-header .content-single #ez-toc-container.is-float {
    top: var(--navbar-height, 100px);
  }
  .content-single #ez-toc-container.is-float .ez-toc-title-container {
    padding: 10px;
  }
  .content-single #ez-toc-container.is-float .ez-toc-title {
    font-size: 1.8rem;
  }
  .content-single #ez-toc-container.is-float .ez-toc-link {
    padding: 5px 0;
    font-size: 1.4rem;
    font-weight: 500;
  }
  .content-single #ez-toc-container.is-float nav {
    position: static;
    max-width: none;
    transform: translateX(0);
  }
}
.content-single #ez-toc-container nav > ul {
  padding: 1em;
}
.content-single #ez-toc-container nav .ez-toc-viewed {
  color: var(--primary-color2) !important;
}
.content-single #ez-toc-container ul {
  height: auto !important;
}
.content-single #ez-toc-container .ez-toc-link {
  display: block;
  padding: 10px 0;
  font-size: 1.6rem;
  font-weight: 700;
  color: var(--toc-color);
}
@media (min-width: 1441px) {
  .content-single #ez-toc-container .ez-toc-link {
    font-size: var(--toc-link-l1-size);
    font-weight: var(--toc-link-l1-weight);
    padding: var(--toc-link-l1-padding);
  }
}
.content-single #ez-toc-container .ez-toc-link:visited {
  color: var(--toc-color);
}
.content-single #ez-toc-container .ez-toc-link:hover {
  text-decoration: none;
  color: var(--primary-color2) !important;
}
.content-single #ez-toc-container .ez-toc-page-1:not(:last-child) {
  border-bottom: 1px solid rgba(var(--primary-color1-rgb), 0.3);
}
.content-single #ez-toc-container .ez-toc-btn {
  margin-bottom: 0;
  margin-left: 10px;
  font-weight: normal;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  color: #333;
  background-color: #fff;
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075);
  background-image: linear-gradient(to bottom, #fff 0, #e0e0e0 100%);
  background-repeat: repeat-x;
  padding: 6px 15px;
  min-width: 100px;
  border-radius: 20px;
  font-size: 16px;
  line-height: 18px;
  position: relative;
  align-items: center;
  justify-content: space-between;
  border: 1px solid #ccc;
  display: flex !important;
}
.content-single #ez-toc-container .ez-toc-btn:hover {
  color: #333;
  background-image: none;
  background-color: #eeeeee;
  border-color: #adadad;
  text-decoration: none;
}
.content-single #ez-toc-container .ez-toc-btn:before {
  content: "Show";
  display: block;
  left: 30px;
  top: 5px;
  font-weight: 400;
  font-size: 16px;
  vertical-align: middle;
}
.content-single #ez-toc-container .ez-toc-btn:active {
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
  background-color: #e0e0e0;
  border-color: #dbdbdb;
}
.content-single #ez-toc-container .ez-toc-btn:focus {
  outline: thin dotted #333;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
.content-single #ez-toc-container .ez-toc-btn.active:before {
  content: "Hide";
}
.content-single #ez-toc-container .ez-toc-btn.active .ez-toc-icon-toggle:before {
  transform: rotate(0);
}
.content-single #ez-toc-container .ez-toc-icon-toggle {
  position: relative;
  top: 0;
  height: 16px;
  display: inline-block;
  vertical-align: middle;
  font-style: normal;
  font-weight: normal;
  line-height: 1;
}
.content-single #ez-toc-container .ez-toc-icon-toggle:empty {
  width: 1em;
}
.content-single #ez-toc-container .ez-toc-icon-toggle:before {
  content: "";
  display: inline-block;
  width: 17px;
  height: 100%;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-image: url("data:image/svg+xml,%3Csvg width='11' height='8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M9.703 8L5.5 3.41 1.297 8 0 6.583 5.5.576 11 6.583 9.703 8z' fill='%232A425C'/%3E%3C/svg%3E");
  transform: rotate(180deg);
}
.content-single #ez-toc-container .ez-toc-title-container {
  background-color: var(--toc-title-bg);
  padding: var(--toc-title-padding);
}
.content-single #ez-toc-container .ez-toc-title {
  color: var(--toc-title-color);
  font-size: var(--toc-title-size);
  font-weight: var(--toc-title-weight);
  letter-spacing: 0.17em;
  text-transform: uppercase;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
