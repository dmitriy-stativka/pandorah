/*
.sixteen-nine {
	@include aspect-ratio(16,9);
}*/
/* Media Queries Breakpoints */
/**
* *******************
*  Usage examples
* *******************
*
//
//  use <=
*   ALWAYS use <= ( '<' with '=' character) for all breakpoints
*   when setting max-width, ex: max-width: 1024px,
*
*   so max-width: 1440px  == media('<=desktop-l')
*
* ***********************************************
*
//  use >
*   ALWAYS use only > as single character for all breakpoints
*   when setting min-width, ex: min-width: 768px,
*
*   so min-width: 1025px  == media('>desktop')
*
*************************************************
*
*## EXAMPLE:
*
*   (min-width: 768px) and (max-width: 1024px)
*   =
*   media ('>tablet'), ('<=desktop')
*
//

 */
.error-content,
.not-found {
  text-align: center;
  padding: 20vh 0;
  width: 100%;
}

.p-404 {
  --p404: 25rem;
  --p404-text: 5rem;
  --p404-color: var(--primary-color1);
  text-align: center;
  min-height: 400px;
  padding: 10vh 0;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--p404-color);
}
@media (max-width: 1024px) {
  .p-404 {
    --p404: 20rem;
    --p404-text: 4rem;
  }
}
.p-404__title {
  font-size: var(--p404);
  font-weight: 900;
  line-height: 0.9;
}
.p-404__text {
  font-size: var(--p404-text);
  font-weight: 700;
  margin-bottom: 1.5em;
  line-height: 1.4;
}

.--preview-screen {
  height: 100vh;
  min-height: 300px;
  background-size: 110%;
  background-position: center center;
  overflow: hidden;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-size 0.75s ease, margin-top 0.75s ease-in-out;
}
@media (max-width: 1024px) {
  .--preview-screen {
    background-size: cover;
  }
}
.--preview-screen.up {
  margin-top: -100vh;
}
.--preview-screen::before {
  content: "";
  position: absolute;
  z-index: 6;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: rgba(2, 14, 14, 0.75);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}
.--preview-screen.active {
  background-size: 100%;
  transition: background-size 0.75s ease, margin-top 0.75s ease-in-out;
}
@media (max-width: 1024px) {
  .--preview-screen.active {
    background-size: cover;
  }
}
.--preview-screen.active::before {
  opacity: 1;
  visibility: visible;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}
.--preview-screen-title {
  font-weight: 700;
  font-size: 28px;
  line-height: 31px;
  text-align: center;
  text-transform: uppercase;
  color: var(--primary-color3);
  opacity: 0.5;
  transition: opacity 0.3s ease;
  font-family: var(--font-family-secondary);
  pointer-events: none;
}
@media (max-width: 1024px) {
  .--preview-screen-title {
    opacity: 1;
  }
}
.--preview-screen-btn {
  width: 24px;
  height: 24px;
  background: #D5CEC8;
  padding: 0;
  transition: padding 0.3s ease;
  transform: rotate(45deg);
  position: relative;
}
.--preview-screen-btn:after {
  content: "";
  width: 40px;
  height: 40px;
  position: absolute;
  top: -10px;
  left: -10px;
  right: 0;
  bottom: 0;
  opacity: 0.4;
  border: 2px solid #D4CFCB;
  transition: all 0.3s ease;
}
.--preview-screen-box {
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
  gap: 30px;
  position: relative;
  z-index: 3;
}
.--preview-screen-box:hover .--preview-screen-title {
  opacity: 1;
  transition: opacity 0.3s ease;
}
.--preview-screen-box:hover .--preview-screen-btn {
  cursor: pointer;
  padding: 3px;
  transition: padding 0.3s ease;
}
.--preview-screen-box:hover .--preview-screen-btn::after {
  transform: rotate(90deg);
  top: -7px;
  left: -7px;
  transition: all 0.3s ease;
}
.--preview-screen-message {
  top: 60px;
  max-width: 20px;
  max-height: 20px;
  opacity: 1;
  border-radius: 0;
  transform: rotate(45deg);
  width: 100%;
  height: 100%;
  text-align: center;
  overflow: hidden;
  position: absolute;
  z-index: 2;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  color: var(--primary-color1);
  padding: 0;
  transition: max-width 0.5s ease, max-height 0.5s ease, transform 0.5s ease, padding 0.5s ease, top 0.5s ease;
}
.--preview-screen-message:after {
  content: "";
  width: 100%;
  height: 100%;
  background: url("/wp-content/themes/pandorah/assets/_src/images/box_bg.jpg") no-repeat center center;
  background-size: cover;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: -1;
}
.--preview-screen-message-box {
  transform: translateY(0%);
  transition: transform 1s ease, opacity 0.2s ease;
  opacity: 0;
}
.--preview-screen-message-box.go {
  transform: translateY(-100%);
}
.--preview-screen-message img {
  display: block;
  margin: auto;
}
.--preview-screen-message.show {
  border-radius: 10px;
  max-width: 700px;
  max-height: 500px;
  transform: rotate(0);
  padding: 50px;
  top: 0px;
  z-index: 6;
  transition: max-width 0.5s ease, max-height 0.5s ease, transform 0.5s ease, padding 0.5s ease, top 0.5s ease, opacity 1s ease;
}
@media (max-width: 1024px) {
  .--preview-screen-message.show {
    padding: 15px;
    width: 100%;
    max-width: 90%;
  }
}
.--preview-screen-message.show .--preview-screen-message-box {
  opacity: 1;
  transition: transform 1s ease, opacity 0.2s ease;
}
.--preview-screen-message.show.scale {
  max-width: 100%;
  max-height: 100%;
  opacity: 0;
}
@media (min-width: 1500px) {
  .--preview-screen-message.show {
    max-width: 900px;
    max-height: 700px;
  }
}
.--preview-screen-message img {
  width: 100%;
  height: 100%;
  max-width: 180px;
  max-height: 180px;
}
@media (min-width: 1500px) {
  .--preview-screen-message img {
    max-width: 250px;
    max-height: 250px;
  }
}
.--preview-screen-message .--preview-screen-pretitle {
  font-weight: 700;
  font-size: clamp(24px, 5.865vw, 34px);
  line-height: 1;
  font-family: var(--font-family-secondary);
  display: block;
  margin-top: 20px;
}
.--preview-screen-message .--preview-screen-description {
  max-width: 280px;
  font-weight: 400;
  font-size: clamp(18px, 5.865vw, 24px);
  line-height: 36px;
  margin: 0 auto;
}
.--preview-screen-message .--preview-screen-h2 {
  font-weight: 400;
  font-size: clamp(45px, 5.865vw, 120px);
  line-height: 1;
  text-transform: uppercase;
  font-family: var(--font-family-secondary);
  margin: 10px 0;
}
.--preview-screen-close {
  width: 25px;
  height: 25px;
  position: absolute;
  z-index: 2;
  top: -25px;
  right: -25px;
  transition: transform 0.3s ease, width 0.3s ease, height 0.3s ease;
}
@media (max-width: 1024px) {
  .--preview-screen-close {
    top: 5px;
    right: 5px;
  }
}
.--preview-screen-close:after, .--preview-screen-close:before {
  content: "";
  width: 100%;
  height: 3px;
  background: var(--primary-color1);
  position: absolute;
  transition: all 0.3s ease;
  margin: 11px 0 0 -12px;
}
.--preview-screen-close:after {
  transform: rotate(45deg);
}
.--preview-screen-close:before {
  transform: rotate(-45deg);
}
.--preview-screen-close:hover {
  cursor: pointer;
  width: 35px;
  height: 35px;
  transition: all 0.3s ease;
}
.--preview-screen-close:hover:after, .--preview-screen-close:hover:before {
  height: 4px;
  transition: all 0.3s ease;
}
.--preview-screen-close:hover:after {
  transform: rotate(135deg);
}
.--preview-screen-close:hover:before {
  transform: rotate(45deg);
}
.--preview-screen-down {
  background: transparent;
  padding: 0;
  margin: 0;
  border: none;
  position: relative;
  margin-top: 40px;
  cursor: pointer;
}
@media (min-width: 1500px) {
  .--preview-screen-down {
    margin-top: 100px;
  }
}
.--preview-screen-down::after {
  content: "";
  width: 60px;
  height: 60px;
  border: 1px solid var(--primary-color1);
  position: absolute;
  top: -5px;
  left: -20px;
  right: 0;
  bottom: 0;
  margin: auto;
  transform: rotate(45deg);
}

.hero_section {
  height: 70vh;
  position: relative;
  min-height: 600px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-size: cover;
  overflow: hidden;
}
@media (max-width: 1024px) {
  .hero_section {
    padding: 4rem 10px;
  }
  .hero_section img {
    width: 60%;
  }
}
.hero_section.noise {
  overflow: hidden;
}
.hero_section.noise:after {
  opacity: 0.15;
}
.hero_section-img, .hero_section-box {
  position: relative;
  z-index: 9;
}
.hero_section .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 70px;
}
@media (max-width: 1024px) {
  .hero_section .container {
    flex-direction: column;
  }
}
.hero_section-box {
  max-width: 820px;
}
.hero_section-title {
  color: #E5E5E5;
  margin: 0;
}
.hero_section-description {
  color: #E5E5E5;
}

.user_content {
  text-align: right;
  height: 70vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin: 6rem 0;
}
@media (max-width: 1024px) {
  .user_content {
    margin: 0;
    height: 100%;
    padding: 4rem 15px;
    text-align: center;
  }
}
.user_content .c-heading__title, .user_content .c-heading__description {
  color: var(--primary-color1);
}
.user_content .container {
  display: flex;
  align-items: center;
  gap: 50px;
}
@media (max-width: 1024px) {
  .user_content .container {
    flex-direction: column;
    padding: 0;
  }
}
.user_content-heading {
  text-align: left;
  flex-basis: 30%;
}
@media (max-width: 1024px) {
  .user_content-heading {
    order: 1;
    text-align: center;
  }
}
.user_content-box {
  flex-basis: 70%;
}
@media (max-width: 1024px) {
  .user_content-box {
    order: 2;
  }
}
.user_content-img {
  margin: 0 0 0 auto;
  width: 240px;
  height: 240px;
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
  transition: all 0.5s ease;
}
.user_content-img img {
  width: 100%;
  height: 100%;
  transform: scale(4) translate(-17%, 19%);
  object-fit: contain;
  transition: all 0.5s ease;
}
@media (min-width: 1024px) {
  .user_content-img:hover {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
    width: 100%;
    height: 100vh;
    transition: all 0.5s ease;
  }
  .user_content-img:hover img {
    transform: scale(1) translate(0%, 0%);
    transition: all 0.5s ease;
  }
}

.mechanism {
  margin: 6rem 0;
}
@media (max-width: 1024px) {
  .mechanism {
    margin: 0;
    padding: 0rem 15px 4rem 15px;
  }
}
.mechanism .container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 50px;
}
@media (max-width: 1024px) {
  .mechanism .container {
    padding: 0;
    flex-direction: column;
  }
}
.mechanism .c-heading {
  color: var(--primary-color1);
  flex-basis: 60%;
}
.mechanism-img {
  flex-basis: 40%;
}
.mechanism-img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.run-section {
  margin: 6rem 0;
}
@media (max-width: 1024px) {
  .run-section {
    margin: 0;
    padding: 0 15px 4rem 15px;
  }
}
.run-lines {
  position: relative !important;
  display: flex;
}
.run-item {
  padding: 0 15px;
}
.run-item img {
  border-radius: 15px;
}

.exquisite {
  position: relative;
  margin: 6rem 0;
  cursor: pointer;
}
@media (max-width: 1024px) {
  .exquisite {
    margin: 0;
    padding: 0 15px 4rem 15px;
  }
}
.exquisite-content {
  color: var(--primary-color1);
  transform: translateX(100%);
  opacity: 0;
  min-width: 50%;
  transition: opacity 0.5s ease, transform 0.5s ease, min-width 0.5s ease;
}
.exquisite .container {
  display: flex;
  align-items: center;
  position: relative;
  padding: 0 0 100px 0;
}
.exquisite .container:after {
  content: "";
  background: var(--primary-color1);
  opacity: 0.5;
  width: 105px;
  height: 2px;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  transition: opacity 0.5s ease, width 0.5s ease;
}
@media (max-width: 1024px) {
  .exquisite .container {
    padding: 0 0 50px 0;
  }
}
.exquisite-media {
  min-width: 100%;
  transition: min-width 0.5s ease;
}
.exquisite img {
  filter: grayscale(1);
  max-width: 250px;
  max-height: 250px;
  width: 100%;
  height: 100%;
  transition: max-width 0.5s ease, max-height 0.5s ease, filter 0.5s ease;
  display: block;
  margin: auto;
}
.exquisite img:hover {
  filter: grayscale(0);
  transition: all 0.5s ease;
}
.exquisite.active .container:after {
  width: 100%;
  opacity: 1;
  transition: opacity 0.5s ease, width 0.5s ease;
}
.exquisite.active .exquisite-media {
  min-width: 50%;
  transition: min-width 0.5s ease;
}
.exquisite.active .exquisite-content {
  transform: translateX(0%);
  opacity: 1;
  transition: opacity 0.5s ease, transform 0.5s ease, min-width 0.5s ease;
}
.exquisite.active img {
  filter: grayscale(0);
  max-width: 530px;
  max-height: 530px;
  transition: max-width 0.5s ease, max-height 0.5s ease, filter 0.5s ease;
}

.faq {
  color: var(--primary-color1);
  margin: 6rem 0;
}
@media (max-width: 1024px) {
  .faq {
    margin: 0;
    padding: 0 15px 4rem 15px;
  }
  .faq .container {
    padding: 0;
  }
}
.faq .c-heading {
  margin-bottom: 50px;
}
.faq .c-heading__description {
  font-weight: 700;
  font-size: clamp(16px, 5.865vw, 32px);
}
.faq .row {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 50px;
}
.faq_media {
  flex-basis: 50%;
}
.faq_media img {
  width: 100%;
  height: 100%;
}
@media (max-width: 1024px) {
  .faq_media {
    display: none;
  }
}
.faq .accordion {
  flex-basis: 50%;
}
@media (max-width: 1024px) {
  .faq .accordion {
    flex-basis: 100%;
  }
}
.faq .accordion_description {
  padding: 0 15px;
  font-weight: 400;
  font-size: 22px;
  overflow: hidden;
  max-height: 0;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease, max-height 0.3s ease, padding 0.5s ease;
}
@media (max-width: 1024px) {
  .faq .accordion_description {
    font-size: 18px;
  }
}
.faq .accordion_title {
  background: linear-gradient(180deg, #EEEEEE 0%, #E7E4E0 100%);
  box-shadow: 0px 10px 20px rgba(201, 193, 182, 0.35);
  border-radius: 10px;
  font-weight: 700;
  font-size: 24px;
  padding: 15px 20px;
  margin-bottom: 5px;
  cursor: pointer;
  transition: font-weight 0.5s ease;
  position: relative;
}
@media (max-width: 1024px) {
  .faq .accordion_title {
    font-size: 21px;
  }
}
.faq .accordion_title:after {
  content: "";
  border: solid var(--primary-color1);
  border-width: 0 3px 3px 0;
  display: inline-block;
  padding: 0;
  transform: rotate(45deg) translate(0);
  position: absolute;
  right: 20px;
  top: 0;
  bottom: 0;
  margin: auto;
  width: 9px;
  height: 9px;
  transition: transform 0.3s ease;
}
.faq .accordion_item.show .accordion_description {
  opacity: 1;
  visibility: visible;
  padding: 25px 15px;
  transition: opacity 0.3s ease, visibility 0.3s ease, max-height 0.3s ease, padding 0.5s ease;
}
.faq .accordion_item.show .accordion_title {
  font-weight: 400;
  transition: font-weight 0.5s ease;
}
.faq .accordion_item.show .accordion_title:after {
  transform: rotate(-135deg) translateX(-3px);
  transition: transform 0.3s ease;
}
.faq-btns {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  margin-top: 50px;
}
@media (max-width: 1024px) {
  .faq-btns {
    flex-direction: column;
    gap: 20px;
  }
}

/* Custom Styles For The Project */
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
